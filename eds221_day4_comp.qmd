---
title: "eds221_day4_comp"
format: html
editor: visual
execute: 
  echo: false
  warning: false
---

```{r}

  
library(tidyverse)
```

# For Loops			

Write a for loop that returns your total time for any two consecutive
quarter miles

```{r}
quarter_splits <- c(1.0, 1.1, 1.2, 1.1, 1.4, 1.5, 1.6, 1.4)

for(i in seq_along(quarter_splits)){
  print(quarter_splits[i]+ quarter_splits[i +1])
  
}
```

make a function to double the user input.

```{r}
double_this <- function(my_value){
  print(2 * my_value)
}

double_this(my_value = 200)
double_this(2)

double_this(c(1,2,10,100,  175))

```

asks for a users name and age and returns, "I'm blank and I am age years old!"

need to use print and paste when iterating, but not needed here

```{r}
age_name <- function(age,name){
  paste("My name is", name, "and I am", age, "years old")
}
age_name(29, "Adelaide")


```

## function documentation

top tells name and the package

description: brief summary of what it is

usage: how is it structured, and what is the required arguments mean(x...)

Arguments: summarizes arguments and gives details author wanted to add.

Examples are at the end, usually complex examples

```{r}
convert_animal_age <- function(animal, human_age){
  if(animal == "dog"){
    print(human_age * 7)
  } else if (animal == "goat"){
    print(human_age * 4.7)
  } else print("Please enter dog or goat for animal")
  
}
#tell me the human age of this goat
convert_animal_age("goat",89)
# gives the else value 
convert_animal_age("chicken", 22)
```

```{r}
dog_choice <- tribble(
  ~dog_name, ~food,
  "khora", "everything",
  "Teddy", "Salmon",
  "waffle", "pancakes",
  "Banjo", "chicken")

dog_menu <- function(name){
  my_sub <-filter(dog_choice, dog_name == name)
print(paste("My name is", my_sub$dog_name, "and I like to eat", my_sub$food ))
}
dog_menu("khora")

```

## Functions meet for loops

means over columns

essentially making apply function w/ mean

```{r}
mean_over_columns<- function(df){
  for(i in seq_along(df)){
    col_mean <- mean(df[[i]], na.rm = TRUE)
  colum_name <- colnames(df[i])
  print(paste("The mean value of", colum_name, "is",
              col_mean))
  }
}
mean_over_columns(mtcars)
```
